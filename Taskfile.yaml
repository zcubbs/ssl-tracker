version: '3'

env:
  GOOS: "{{OS}}"

tasks:
  bootstrap:
    desc: Install all necessary tools and CLI dependencies
    cmds:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest
      - go install github.com/securego/gosec/v2/cmd/gosec@latest
      - go install go.uber.org/mock/mockgen@latest
      - go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
      - task: bootstrap:{{OS}}

  bootstrap:darwin:
    desc: Install all necessary tools and CLI dependencies for MacOS
    cmds:
      - brew install buildpacks/tap/pack

  bootstrap:windows:
    desc: Install all necessary tools and CLI dependencies for Windows
    cmds:
      - scoop install pack

  bootstrap:linux:
    desc: Install all necessary tools and CLI dependencies for Linux
    cmds:
      - sudo add-apt-repository ppa:cncf-buildpacks/pack-cli
      - sudo apt-get update
      - sudo apt-get install pack-cli

  go:deps:
    desc: Install Go dependencies
    cmds:
      - go mod tidy
      - go mod download

  node:deps:
    desc: Install Node.js dependencies
    cmds:
      - cd web && npm install

  react:build:
    desc: Build React application
    deps: [ node:deps ]
    cmds:
      - cd web && npm run build

  go:build:
    desc: Build Go application
    deps: [ go:deps, react:build ]
    cmds:
      - go build -o ./bin/server ./...

  image:build:
    desc: Build Docker image
    deps: [ go:build ]
    cmds:
      - pack build tlz --builder gcr.io/buildpacks/builder:v1 --buildpack paketo-buildpacks/go
      - pack sbom download tlz

  start:
    desc: Start the application
    cmds:
      - ./bin/server

  mock:
    desc: Generate mocks
    cmds:
      - cmd: mockgen -package mockdb -destination db/mock/store.go github.com/zcubbs/tlz/db/sqlc Store

  sqlc:
    desc: Generate SQLC code
    cmds:
      - task: sqlc-{{OS}}

  sqlc-windows:
    desc: Generate SQLC code for Windows
    cmds:
      - cmd: docker run --rm -v "${PWD}:/src" -w /src sqlc/sqlc generate

  sqlc-darwin:
    desc: Generate SQLC code for MacOS
    cmds:
      - cmd: sqlc generate

  sqlc-linux:
    desc: Generate SQLC code for Linux
    cmds:
      - cmd: sqlc generate

  mig:gen:
    desc: "Generate migration. Usage: task mig:gen -- <migration_name>"
    cmds:
      - cmd: migrate create -ext sql -dir db/migrations -seq {{.CLI_ARGS}}

  mailhog:up:
    desc: Start MailHog
    cmds:
      - docker run --rm --name mailhog -d -p 1025:1025 -p 8025:8025 mailhog/mailhog

  mailhog:down:
    desc: Stop MailHog
    cmds:
      - docker stop mailhog
